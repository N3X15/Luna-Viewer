SilverLining (tm) Release Notes

Version 1.818 September 3 2009
- Better input validation
- Fix bug in OSG sample code's near/far clip adjustment
- Make source compatible with gcc 4.4
- Precipitation performance enhancements.
- Updated license agreement for full source version to not include reverse engineering
  restrictions.

Version 1.817 August 18 2009
- Fix ATI compatibility issues

Version 1.816 August 15 2009
- OpenSceneGraph 1.0 example code provided (in addition to the 2.x example)
- Updated license agreement

Version 1.815 July 16 2009
- Re-enable DX9 shaders
- Switch to compiled HTML docs
- Set SILVERLINING_PATH env variable immediately when installer finishes.
- render-offscreen back to "no" by default.

Version 1.814 July 14 2009
- Fix crash related to RandomNumberGenerator if all atmospheres are deleted and then one is recreated
- Render the lighting pass offscreen by default, for better DX9 compatibility.

Version 1.813 July 12 2009
- Added HDR sky shader for DirectX
- Added new configurations to the SilverLining project (full source users only) to statically link in the
DirectX or OpenGL renderers (makes console porting easier.)
- Made source code more platform-independent.

Version 1.812 July 9 2009
- Reduced billboard vertex buffer chunk size from 20000 to 10000 vertices for system compatibility
- Fix problem when the modelview and proj. matrices change between beginframe() and endframe()
- DirectX9 renderer no longer uses NVidia's Cg - it uses HLSL directly. DirectX applications no
  longer need to link against Cg and redistribute it (this makes XBox porting easier.)

Version 1.811 June 24 2009
- Made OpenSceneGraph sample code Linux-friendly, provided makefile, force to display in window
- Added HDR (floating point color) support for licensed users with full source. 
  Uncomment the preprocessor definition FLOATING_POINT_COLOR in VertexBuffer.h,
  rebuild the libs and DLLs, and the sky will render in HDR space.

Version 1.81
- Mac OSX 10.5 support! Makefiles will build under MacOS or Linux now.
Continue to use the Visual Studio project files for Windows.
- Fix bug in billboard shader with uninitialized value (seemed to affect ATI
cards mostly)
- Intel compiler compatibility
- Reduce calls to configuration
- Speed up initialization by streamlining billboard creation
- Abstracted away the random number generator. You may provide your own by subclassing
RandomNumberGenerator and passing in an instance of your implementation to 
Atmosphere::SetRandomNumberGenerator()

Version 1.801 June 2 2009
- Reset vertex buffer format on entry to SilverLining with bindless graphics.
- Always calculate the framerate, since the app might display it on its own.

Version 1.8 June 1 2009
- "Infinite" cumulus cloud layers - see new CUMULUS_CONGESTUS_INFINITE and CUMULUS_MEDIOCRIS_INFINITE cloud
layer types in CloudLayerFactory. These layers stay centered at the camera position, with individual clouds
wrapping across the layer. No more disappearing clouds as the wind blows them away, or as the camera moves.
- Uses OpenGL Bindless Graphics on systems that support it (NVidia 185 driver + G80 hardware.) 20% faster
by our tests.
- Linux support. Code compiles and links without warnings on GNU C++; static library, OpenGL sample, and 
makefiles provided. Tested on Fedora Core 10.

Version 1.7 May 18 2009
- DirectX 10 support! DX10 version does not depend on NVidia's Cg any longer, and uses HLSL directly.
- Takes explicit modelview and projection matrices from the application now; see 
  Atmosphere::SetCameraMatrix() and Atmosphere::SetProjectionMatrix()
- GCC portability bugs addressed
- Added geocentric and ecliptic versions of Atmosphere::GetSunOrMoonPosition
- Updated to CG 2.2
- Apply visibility effects from global precipitation set on AtmosphericConditions
- Cleaned up project files in full source distribution
- Fixed LocalTime::AddSeconds()
- Added cloud-relight-budget config setting to spread out relighting in response to time of day changes.


Version 1.610 December 13 2008
- Reduced memory fragmentation
- Reduced and made configurable how the moon lights up the sky at night
- Made config lookups more efficient
- Fix resource leak in DirectX with render-offscreen enabled

Version 1.609 November 27 2008
- Protect against duplicate Cg context ID's in renderer shutdown.

Version 1.608 November 26 2008
- Don't reload the DLL when creating a new atmosphere.
- Fix DirectX resource leaks when releasing multiple atmospheres.
- Maintain seperate Cg contexts per Atmosphere object.

Version 1.607 November 25 2008
- Further DirectX / multiple device fixes.

Version 1.606 November 24 2008
- Allow DirectX version to work with multiple devices (one device per Atmosphere object)
- Fix precipitation manager shutdown with multiple atmospheres

Version 1.605 November 8 2008
- Added CloudLayer::GetPrecipitation() method
- Precipitation is now saved and restored with cloud layers.

Version 1.604 November 5 2008
- Disable fixed-function fog when billboard shader is in effect. (Fixes cumulus clouds when viewed from within
  a stratus cloud in DirectX)

Version 1.603 October 28 2008
- LocalTime::SetFromEpochSeconds now assumes GMT time zone, no need to set local time zone with it anymore.
- Fix broken stratus clouds in DirectX

Version 1.602 October 25 2008
- Update to final release of Cg 2.1
- Properly handle off-center / skewed / sheared projection matrices when rendering precipitation

Version 1.601 October 13 2008
- Release precipitation resources when Atmosphere is destroyed (allows D3D9 to be reset successfully)
- Honor the default-turbidity setting when Atmosphere::Initialize is called.
- Make sky shaders compatible with HLSL
- Change blending mode for glares
- Fix GetSunOrMoonPosition to return light source with greatest transmitted luminance
- Add Atmosphere::GetGamma() and Atmosphere::SetGamma() to allow runtime adjustment

Version 1.6 September 28 2008
- Add third parameter to Atmosphere::BeginFrame() to allow apps to change the size of the skybox dynamically
  (useful for apps that modify the near and far clip planes dynamically)
- Fix scale of projected depth in left-handed OpenGL or right-handed DirectX.
- Tweak how large cloud layers are sorted relative to each other
- Don't make cumulus clouds disappear as soon as you enter a stratus deck
- Fix floating point accuracy issues in GetDistance methods of flat cloud layers
- Added Atmosphere::GetConfigValueDouble and Atmosphere::GetConfigValueString
- Remove clouds from list of scene objects as soon as they are deleted.
- Change up and right vectors passed into Atmosphere to take doubles instead of floats
- Add AtmosphericConditions::SetFog(), ClearFog(), and GetFog() to explicitly fog clouds to a given color and density
- Clear all vertex array client states before using vertex arrays
- Improved OpenSceneGraph sample code
- Fix transition as you leave the atmosphere with very high altitudes
- Add gamma correction to the skybox colors and light colors (you can adjust with the sky-box-gamma config setting,
  and influence how dark the sky colors are by doing so. The default of 1.8 is quite realistic.)

Version 1.514 August 17 2008
- Fix anomalies in cloud billboards when looking up at around 45 degrees
- Fix cloud flicker in Ogre3D using DirectX
- Tweak Ogre3D sample code to display warning dialog before entering full screen mode,
  and specify the time zone to match the location.

Version 1.513 August 10 2008
- Fix DLL path for debug builds
- Update to Cg 2.1 beta (fixes flicker in sky that was happening on some systems)
- Color the sun disc as it nears the horizon (see new scatter-sun-color config setting)
- Don't draw the sun when it's below the horizon by default (see new draw-sun-below-horizon config setting)
- Added troubleshooting tips to the documentation

Version 1.512 August 1 2008
- Fix streak lengths for sleet when camera is moving.
- Fix spelling on lightning-max-discharge-period config setting.

Version 1.511 July 30 2008
- Don't ask for high quality smooth lines for lightning, too much of a performance hit on some
  systems.
- Pre-compute lighting effects from lightning to speed up runtime performance.
- Added section in documentation on using Silverlining in geocentric / ECEF systems.
- Add table of contents to main page of docs.
- Changed OSG example to point to a win32 Program Files path instead of win64 in 
  Atmosphere::Initialize call.
- Force clouds to recompute lighting upon a CloudLayer::SetEnabled call, regardless of time 
  lapse update settings.
- If a thunderhead's base altitude is more than the radius of the Earth, assume we are 
  in an ECEF system and don't render lightning bolts to the center of the Earth...

Version 1.51 July 23 2008
- Added sleet
- Added support for mixed precipitation (call CloudLayer::SetPrecipitation multiple times for different 
  precip types, or set it to NONE to clear them)
- Added AtmosphericConditions::SetPrecipitation method, for global precipitation effects that don't require
  use of CloudLayers.
- Don't use Cg profiles newer than VP40 or FP40; our billboard shader doesn't seem to work properly with the
  new profiles in Cg 2.0.
  
Version 1.502 July 13 2008
- Added fade in / fade out effects to CloudLayers; see new fadeTimeMS parameter in CloudLayer::SetEnabled()
- Properly factor in night sky luminance (including light pollution) into tone-mapping
- Don't draw stars when it's overcast.
- Fix undefined V-coordinate texture wrapping mode in DirectX
- Lightning strikes now honor the MillisecondTimer instead of using system time directly
- Add Ogre3D sample code

Version 1.501 June 27 2008
- Added AtmosphericConditions::SetLightPollution() to add extra ambient light to nighttime scenes
- Fixed range of snow to 1.0 to 30.0 mm/hr instead of 1.0 to 3.0 (we mixed up cm and mm... blush)
- Fix bug where cloud colors were undefined if a certain register got overwritten by the application
- Added config option to prevent rain streaks from elongating with camera motion

Version 1.5 June 22 2008
- Fix sky color on skybox verts below the horizon
- Smoother fog transitions through stratus clouds
- Added precipitation (rain and snow) support to CloudLayers
- Fix bogus assert in CumulusCloud.cpp
- Fix various gcc portability issues
- Make cirrus lighting consistent with cirrocumulus lighting
- Updated to May 2008 Cg build
- Updated to March 2008 DirectX SDK
- Added 64-bit DLL's and LIB's (see new win32 and x64 subdirectories now)
- No longer supporting Visual Studio 6 and 2007 (see docs on how to obtain version 1.094)
- Improved cumulus cloud appearance
- Hand-modeled Cumulonimbus clouds added
- Demo time limit increased to 5 minutes
- Fixed sun/moon billboarding in geocentric mode
- Added OpenSceneGraph sample code
- Added Atmosphere::SetConfigOption method

Version 1.094 March 30 2008
- Explicitly sets the client active texture unit to zero prior to rendering 
  (fixes lots of compatibility problems)
- Added Visual C++ 2008 (VC9) support
- Added support for manually generated cloud models (contact us for details)
- Built VC8 binaries with SP1
- Remove ATL dependency in DirectX9 DLL, so you can build sources with VC++ Express Edition.
- Disabled 2D text drawing (framerate display) in DirectX9. D3DXFont::DrawText was crashing
  on some systems, despite having valid parameters.
- Add +- 10% randomness in individual cloud puff sizes

Version 1.093 March 23 2008
- Added star-magnitude-adjustment config setting to allow tweaking of star brightness
- Smoothed transition from atmosphere-from-space to ground
- Enable glare on the sun when outside of the atmosphere
- Fix bug where cloud layer altitude and thickness were not properly saved / restored
- Fix reversed wind direction on stratus decks
- Added "quick and dirty" cloud lighting option in config file, useful for time lapse sequences.
- Fix star orientation in geocentric mode
- Updated to Cg 2.0 (Jan 08 build)
- Add statically linked DirectX9 renderer build option
- Fix bug where north/south axis was flipped for astronomical object positions in sky
- No longer messes with near and far clip when drawing the sky box, this led to inconsistencies.
- Stars, sun, and moon drawn honoring the skybox size config setting.

Version 1.092 January 13 2008
- Draw the bottom face of the skybox (for space-based viewpoints)
- Fix bug that affected performance on cumulus clouds
- Always draws the sun (for space-based viewpoints)
- Sets near and far clip planes to ensure drawing of the sky box
- Reduced memory footprint
- Realistically darken the sky as the altitude (as specified in the Location of the
  AtmosphericConditions) increases. Go up into space and watch the stars come out!
- Simulated sun and moon light color is affected by altitude (scattering reduces with
  altitude.)
- Fix bug where sun and moon light directions were not transformed into the specified
  coordinate frame as set by Atmosphere::SetUpVector and SetRightVector.
- Exposed geographic and equatorial coordinates for the sun and moon.
- Added geocentric coordinate rendering mode for astronomical objects (see new optional paramater
  on Atmosphere::EndFrame() )
- Fixed bug where going backwards in time using a MillisecondTimer would cause clouds to
  completely disappear.
- CloudLayer::SetLayerPosition may now be called at runtime to reset a layer's position and/or
  wind drift.
- Added simulated atmospheric limb for space-based viewpoints. (see enable-atomsphere-from-space
  config setting)

Version 1.091 October 27 2007
- Set vertex array buffer to 0 when unsetting it (fixes OpenSceneGraph compatibility problems)
- Fix crash on systems without array buffer support on OpenGL

Version 1.090 June 23 2007
- Fix bug in positioning of cumulus congestus clouds
- Properly initialize textures to null for stratus and cirrus clouds

Version 1.089 April 8 2007
- Return error codes from Atmosphere::Initialize instead of just a boolean success.
- Push and pop the GL client state surrounding BeginFrame and EndFrame calls automatically.
- Release DirectX resources associated with offscreen render targets.
- Distribute VC6, 7, and 8 builds of renderer DLL's under VC6, VC7, and VC8 subdirectories of
the Resources directory. Libraries automatically link in correct builds at runtime.
- Fix Visual C++ 6 sample project files.

Version 1.088 February 24 2007
- Fix DirectX object leak when using offscreen rendering for lighting pass
- Fix resource folders not relative to the working directory in OpenGL version
- Added support for custom millisecond timers (see AtmosphericConditions::SetMillisecondTimer)
- Added support for continuous time of day updating (see AtmosphericConditions::EnableTimePassage)

Version 1.087 February 11 2007
- Allow devices with unlockable back buffers and multisampling if render-offscreen is enabled in 
  SilverLining.config.
- Documentation corrections.

Version 1.086 February 3 2007
- Disable sun glare effects by default (causes perf issues on some Dell Inspiron laptops)
- Disable imposters by default (causes jerkiness on PCI NVidia cards)
- Limit number of imposter and cloud sorting updates per frame to smooth framerates
- Fix sun disc drawing before sunrise

Version 1.085 January 28 2007
- Reduce ambient term in cumulus clouds to improve appearance.
- Save and restore state in DirectX
- Fix missing ground texture in DirectX sample app

Version 1.084 January 22 2007
- Added ability to save and restore cloud decks, to offer a way to speed up
  cumulus cloud layer creation and reproduce exact cloud layers without any
  randomness.
- Reduced memory requirements
- Install both VC7 and VC8 project files
- Use VC8 runtime DLL's in DLL library targets instead of VC7
- Protect against an incompatibility with older ATI drivers in OpenGL mode.
- Fixed resource leaks under DirectX
- Check bounds of reads and writes from the framebuffer to avoid D3D errors
- Fix crash in DirectX associated with lightning firing
- Change sample apps to use static runtimes
- Fix DirectX sample app to not leak memory on shutdown

Version 1.083 November 4 2006
- Update DirectX sample code to wrap Initialize with beginscene/endscene and fix DirectX exception
- Enable re-creation of a deleted Atmosphere object without errors

Version 1.082 October 18 2006
- Added moon-luminance-scale config setting
- Star glare effects disabled by default for performance (set disable-star-glare=no to get them back)
- Fix wind shear on cumulus congestus and cumulonimbus clouds
- Improved lighting on cirrus clouds
- Improved tone-mapping on moonlit nights
- Improved luminance model in twilight (fixes bright clouds after sunset)
- Reduced memory consumption.
- Switch to a newer air mass model.

Version 1.081 October 10 2006
- Switch to the CIE color model.

Version 1.08 October 8 2006
- Improvements in cloud lighting from better modeling of atmospheric optical depth and zenith luminance.
- Improved day/night transitions.
- Fix and tweak glare effects for Directx and OpenGL with ATI extensions.
- Decreased default lightning frequency and lightning branches.
- Added Atmosphere::ReloadConfigFile() method.
- Fix discrepancy between average horizon color, tone mapping, and simple sky shader.
- Fix determination of relevant dominant light source for simplified sky shader.
- Fix bug tracking blend mode state
- Updated to use Cg version 1.5
- Added lightning notification object (see the new LightningListener class)
- Fix tone-mapping when pitch black
- Fix bug where new cumulonimbus clouds would fire all lightning bolts at once on their first frame.
- Switch from CIE color model to CCIR Rec. 709 video standard
- Improved star rendering
- Added cirrocumulus clouds and a second cirrus texture.
- Reduced height of cumulus congestus clouds and decreased voxel size. Tweaked physical parameters.
- Tweaked lightning effects, fixed lightning under DirectX.
- Improved lighting of stratus and cirrus decks.

Version 1.072 September 4 2006
- Clear out texture stage states prior to rendering in DirectX9, fix texture stage enable / disable code.
- Fix bug in setting point rendering state to default in DirectX9, which fixes stars on ATI X1xxx cards.
- Improved appearance of stars at night.
- Tweak billboard matrix with non-default up vectors.
- Fix fog density in DirectX.

Version 1.071 August 29 2006
-Re-enable depth buffer writes when rendering to texture for imposters in DirectX9.

Version 1.07 August 28 2006
- Automatically set default render states within Atmosphere::BeginFrame() and Atmosphere::EndFrame(), and restore original settings
when exiting these methods. Also clears any previously set fragment or vertex shaders.
- Eliminate unnecessary clear of depth buffer in DirectX version.
- Added Atmosphere::SetUpVector() and Atmosphere::SetRightVector() to allow for cases where "up" is not the positive Y axis.
- Modified documentation to indicate that "pure" DirectX devices are not supported.
- Added methods to allow the application to manage its own cloud drawing: Atmosphere::GetObjects(), Atmosphere::GetObjectDistance(),
and Atmosphere::DrawObject().
- preserve-back-buffer config setting now defaults to "no".

Version 1.06 August 6 2006
- Depth and color buffers won't be touched by Atmosphere::BeginFrame(false), if preserve-back-buffer = yes is specified in the SilverLining.config file
- Eliminate unnecessary depth buffer clear
- Protect from crashes due to calling Atmosphere methods in incorrect order
- Fix bug in moonlight calculation
- Store all epoch seconds in unsigned longs
- Fixes for clean builds under VC8

Version 1.051 August 1 2006
- Added MSVC8 libraries

Version 1.05 July 31 2006
- Add ambient skylight to lighting of cirrus and stratus clouds
- Add MSVC 6 libraries and projects
- Change samples to use multithreaded DLL runtime libraries for MSVC8 compatibility 

Version 1.04 July 19 2006

- Code cleanup and documentation for full-source licensees
- Remove limit of simulated refracted solar angle of -9 degrees (we simulate twilight below that point)
- Add SetHaze() and GetHaze() methods to Atmosphere, to support blending toward a specified horizon 
  color in the sky box.
- Fix precision bug on horizon color with NVidia hardware.

Version 1.031 July 2 2006

- More accurate sky color at horizon

Version 1.03 June 26 2006

- Fog color returned from Atmosphere class is premultiplied with the sun/moon color now
- Enabled fog effects on cirrus decks
- Volumetric fog effects on sky dome added

Version 1.02 June 22 2006

- Added Atmosphere::GetHorizonColor() method that doesn't require yawDegrees to be explicitly passed in.
- Protected from divide-by-zeros in GetHorizonColor()
- Simplify star vertex shader to fit within 128 instructions
- Model twilight correctly (better day/night transitions)
- Added GetSunColor(), GetMoonColor(), GetSunPosition(), and GetMoonPosition() methods to the Atmosphere
  class for customers who wish to model two independent light sources.
- Fix cloud colors at dusk / dawn on DirectX
- Fix bug with texture wrapping vs. clamping in DirectX
- Don't fog the sun and moon polygons
- Fix bug where imposter-slop-value config setting wasn't honored.

Version 1.01 June 8 2006

- Tweaked billboarding algorithms to better handle roll
- Fixed billboard rotation for case where vertex shaders aren't supported
- Eliminated memory leaks on application shutdown
- Added additional library builds for every runtime library
- Fixed anomolies with wide fields of view
