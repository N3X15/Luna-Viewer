.TH "SilverLining::Location" 3 "3 Sep 2009" "Version 1.818" "SilverLining" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SilverLining::Location \- An object representing a geographic location.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <Location.h>\fP
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLocation\fP ()"
.br
.RI "\fIDefault constructor. \fP"
.ti -1c
.RI "void \fBSetLatitude\fP (double decimalLatitude)"
.br
.RI "\fISet the simulated latitude. \fP"
.ti -1c
.RI "double \fBGetLatitude\fP () const "
.br
.RI "\fIRetrieves the simulated latitude in decimal degrees form. \fP"
.ti -1c
.RI "void \fBSetLongitude\fP (double decimalLongitude)"
.br
.RI "\fISet the simulated longitude. \fP"
.ti -1c
.RI "double \fBGetLongitude\fP () const "
.br
.RI "\fIRetrieves the simulated longitude in decimal degrees. \fP"
.ti -1c
.RI "void \fBSetAltitude\fP (double metersAboveMeanSeaLevel)"
.br
.RI "\fISets the simulated eyepoint altitude in meters above mean sea level. \fP"
.ti -1c
.RI "double \fBGetAltitude\fP () const "
.br
.RI "\fIRetrives the currently simulated altitude above mean sea level, in meters. \fP"
.in -1c
.SH "Detailed Description"
.PP 
An object representing a geographic location. 

A \fBLocation\fP object must be passed to \fBAtmosphericConditions::SetLocation()\fP to specify the location you wish to simulate. This affects the position of the sun and moon in the sky, which in turn affects your scene's lighting. Be sure that your \fBLocation\fP is consistent with the time zone specified in \fBLocalTime::SetTimeZone()\fP. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SilverLining::Location::Location ()"
.PP
Default constructor. 
.PP
Creates a \fBLocation\fP object with default settings. Defaults will be read from the SilverLining.config file if this is constructed after calling \fBAtmosphere::Initialize()\fP 
.SH "Member Function Documentation"
.PP 
.SS "double SilverLining::Location::GetAltitude () const\fC [inline]\fP"
.PP
Retrives the currently simulated altitude above mean sea level, in meters. 
.PP
\fBSee also:\fP
.RS 4
\fBSetAltitude()\fP 
.RE
.PP

.SS "double SilverLining::Location::GetLatitude () const\fC [inline]\fP"
.PP
Retrieves the simulated latitude in decimal degrees form. 
.PP
North is positive. 
.PP
\fBSee also:\fP
.RS 4
\fBSetLatitude()\fP 
.RE
.PP

.SS "double SilverLining::Location::GetLongitude () const\fC [inline]\fP"
.PP
Retrieves the simulated longitude in decimal degrees. 
.PP
East is positive. 
.PP
\fBSee also:\fP
.RS 4
\fBSetLongitude()\fP 
.RE
.PP

.SS "void SilverLining::Location::SetAltitude (double metersAboveMeanSeaLevel)\fC [inline]\fP"
.PP
Sets the simulated eyepoint altitude in meters above mean sea level. 
.PP
This altitude is only used for astronomical calculations and thereby doesn't have much of an affect on the simulation. Therefore it is not necessary to call \fBSetAltitude()\fP whenever your camera position changes, nor is it particularly important to set this to anything other than zero. 
.PP
\fBSee also:\fP
.RS 4
\fBGetAltitude()\fP 
.RE
.PP

.SS "void SilverLining::Location::SetLatitude (double decimalLatitude)\fC [inline]\fP"
.PP
Set the simulated latitude. 
.PP
\fBParameters:\fP
.RS 4
\fIdecimalLatitude\fP The latitude in decimal degrees form (ie, 45.87). North is positive. 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGetLatitude()\fP 
.RE
.PP

.SS "void SilverLining::Location::SetLongitude (double decimalLongitude)\fC [inline]\fP"
.PP
Set the simulated longitude. 
.PP
\fBParameters:\fP
.RS 4
\fIdecimalLongitude\fP The longitude in decimal degrees form (ie, -122.78). East is positive. 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGetLongitude()\fP 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for SilverLining from the source code.
